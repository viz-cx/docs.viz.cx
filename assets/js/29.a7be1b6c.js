(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{310:function(t,a,s){"use strict";s.r(a);var e=s(12),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"формирование-транзакции"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#формирование-транзакции"}},[t._v("#")]),t._v(" Формирование транзакций")]),t._v(" "),a("p",[t._v("Есть правила формирования транзакций, заложенные в протокол VIZ (использующий каркас Graphene). Данные, подписываемые криптографическим ключом, должны соответствовать всем структурам и правилам бинарного представления, заложенным в код. В данном разделе вы узнаете как кодируются ключи, как происходит бинарное представление данных или их подготовка.")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"структура-транзакции-для-подписи"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#структура-транзакции-для-подписи"}},[t._v("#")]),t._v(" Структура транзакции для подписи")]),t._v(" "),a("p",[t._v("Структура данных, бинарное представление которой и нужно подписывать используя ключи соответствующих типов доступа используемых в аккаунтах вложенных операций, содержит следующие поля:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("chain_id")]),t._v(" — идентификатор цепи, в VIZ это fc::sha256::hash от строки "),a("code",[t._v("VIZ")]),t._v(": "),a("code",[t._v("2040effda178d4fffff5eab7a915d4019879f5205cc5392e4bcced2b6edda0cd")]),t._v(". Стоит отметить, что fc::sha256::hash преобразует строку в c_str, добавляя в начало ее hex значения "),a("code",[t._v("56495A")]),t._v(" длину строки, в итоге sha256 рассчитывается от hex значения "),a("code",[t._v("0356495A")]),t._v(";")]),t._v(" "),a("li",[a("strong",[t._v("tapos_link")]),t._v(" — "),a("RouterLink",{attrs:{to:"/ru/cookbook/state.html#Уникальность-транзакций-и-tapos-transactions-as-proof-of-stake"}},[t._v("Transactions as Proof of Stake концепция")]),t._v(" заключается в том, чтобы каждая транзакция ссылалась на конкретный блок, который должен быть в цепи для ее работы. Бинарное представление является отображением параметров транзакции ref_block_num и ref_block_prefix.")],1),t._v(" "),a("li",[a("strong",[t._v("expiration")]),t._v(" — unixtime экспирации транзакции (она должна быть включена в цепь до времени экспирации);")]),t._v(" "),a("li",[a("strong",[t._v("operations")]),t._v(" — массив операций находящихся в транзакции, бинарное представление каждой операции состоит из всех аттрибутов операции согласно протоколу;")]),t._v(" "),a("li",[a("strong",[t._v("extensions")]),t._v(" — массив служебных расширений транзакции (не используется, поэтому в бинарном формате представляет собой hex значение массива без элементов: "),a("code",[t._v("00")]),t._v(");")])]),t._v(" "),a("h2",{attrs:{id:"зачем-необходим-chain-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#зачем-необходим-chain-id"}},[t._v("#")]),t._v(" Зачем необходим chain_id")]),t._v(" "),a("p",[t._v("Открытый и свободный код блокчейн систем основанных на Graphene позволяют запускать новые цепочки, как без изменений, так и полностью переработанные с собственными механиками и экономикой. Более того, множество проектов запускают публичные тестовые цепочки для проверки изменений. Чтобы ноды не путались и транзакции из одной сети нельзя было применять в форке (или цепи с аналогичными аккаунтами и ключами) — существует идентификатор цепи, который присутствует как метка в каждой транзакции и операции подписи.")]),t._v(" "),a("h2",{attrs:{id:"формат-ключеи"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#формат-ключеи"}},[t._v("#")]),t._v(" Формат ключей")]),t._v(" "),a("p",[t._v("Приватные и публичные ключи в VIZ находятся по "),a("a",{attrs:{href:"https://ru.wikipedia.org/wiki/ECDSA",target:"_blank",rel:"noopener noreferrer"}},[t._v("алгоритму ESDCA"),a("OutboundLink")],1),t._v(" ("),a("a",{attrs:{href:"https://habr.com/ru/post/188958/",target:"_blank",rel:"noopener noreferrer"}},[t._v("теория"),a("OutboundLink")],1),t._v("), и используют криптографию для проверки подписей набора данных. Многие разработчики не являясь специалистами в криптографии просто используют специализированные библиотеки, не вдаваясь в подробности.")]),t._v(" "),a("p",[t._v("Рассмотрим этапность преобразования приватного ключа (состоящего из 32 байт) в читаемый WIF формат:")]),t._v(" "),a("ul",[a("li",[t._v("Ключу добавляем бинарный префикс в hex представлении "),a("code",[t._v("80")]),t._v(";")]),t._v(" "),a("li",[t._v("Вычисляем sha256 хэш от sha256 хэша бинарного представления ключа для контрольной суммы (checksum);")]),t._v(" "),a("li",[t._v("Добавляем в конец ключа первые 8 байт от контрольной суммы;")]),t._v(" "),a("li",[t._v("Кодируем полученный бинарный результат через base58 алгоритм с использованием алфавита: "),a("code",[t._v("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")]),t._v(";")])]),t._v(" "),a("p",[t._v("Этапность преобразование публичного ключа (состоящего из 32 байт) в читаемый формат:")]),t._v(" "),a("ul",[a("li",[t._v("Получаем контрольную сумму хэшированием бинарного представления ключа "),a("a",{attrs:{href:"https://ru.wikipedia.org/wiki/RIPEMD-160",target:"_blank",rel:"noopener noreferrer"}},[t._v("алгоритмом ripemd160"),a("OutboundLink")],1),t._v(";")]),t._v(" "),a("li",[t._v("Добавляем в конец ключа первые 8 байт от контрольной суммы;")]),t._v(" "),a("li",[t._v("Кодируем полученный бинарный результат через base58 алгоритм с использованием алфавита: "),a("code",[t._v("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")]),t._v(";")]),t._v(" "),a("li",[t._v("Добавляем префикс сети (строковое значение "),a("code",[t._v("VIZ")]),t._v(");")])]),t._v(" "),a("p",[t._v("В библиотеке viz-js-lib используется модуль "),a("code",[t._v("auth")]),t._v(" ("),a("a",{attrs:{href:"https://github.com/VIZ-Blockchain/viz-js-lib/blob/master/src/auth/index.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ссылка на GitHub"),a("OutboundLink")],1),t._v("), который позволяет предустановленными методами работать с ключами и подписывать данные.")]),t._v(" "),a("h2",{attrs:{id:"представление-разных-типов-данных-в-бинарном-виде"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#представление-разных-типов-данных-в-бинарном-виде"}},[t._v("#")]),t._v(" Представление разных типов данных в бинарном виде")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("string")]),t._v(" — строковое значение в бинарном виде представляет собой байт содержащий длину строки и саму строку (например, строковое значение логина аккаунта "),a("code",[t._v("escrow")]),t._v(" будет соответствовать hex значению "),a("code",[t._v("06657363726f77")]),t._v(" в бинарном представлении);")]),t._v(" "),a("li",[a("strong",[t._v("integer")]),t._v(" — числовое значение переворачивается в бинарном представлении и пустая размерность заполняется нулями (если задан тип значения). Например, энергия аккаунта указываемая в операции "),a("code",[t._v("award")]),t._v(" представляет собой uint16_t, для передачи которого достаточно 2 байта. Если необходимо передать значением 10.00%, то в целочисленном значении это будет 1000, в hex представлении "),a("code",[t._v("03EB")]),t._v(", перевернутое значение которого будет "),a("code",[t._v("EB03")]),t._v(". Поле "),a("code",[t._v("custom_sequence")]),t._v(" представляющее собой uint64_t уже состоит из 8 байтов, поэтому для передачи десятичного значения 377, его hex значение "),a("code",[t._v("0179")]),t._v(" в бинарном значении будет представлять собой hex: "),a("code",[t._v("7901000000000000")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("date")]),t._v(" — поля дат из JSON представления записаны в ISO формате (например, "),a("code",[t._v("2019-02-07T06:19:23")]),t._v(" в часовом поясе UTC+0, он же GMT). Для их бинарного значения записывается в десятичном формате unixtime по правилам представления "),a("strong",[t._v("integer")]),t._v(". Пример "),a("code",[t._v("2019-02-07T06:19:23")]),t._v(" в unixtime будет "),a("code",[t._v("1549520363")]),t._v(" (hex значение "),a("code",[t._v("5C5BCDEB")]),t._v("), который в бинарном значении будет представлять собой hex: "),a("code",[t._v("EBCD5B5C")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("asset")]),t._v(" — бинарное значение токенов VIZ или SHARES представляет собой последовательность значений: целочисленный integer размерностью 8 байт без точности (0.012 будет представлять собой 12, 1.002 будет представлять собой 1002), 1 байт с точностью (precision) токена ("),a("code",[t._v("03")]),t._v(" для VIZ, "),a("code",[t._v("06")]),t._v(" для SHARES), строковое значение тикера в 7 байт ("),a("code",[t._v("56495A00000000")]),t._v(" для VIZ, "),a("code",[t._v("53484152455300")]),t._v(" для SHARES). Например: "),a("code",[t._v("1.002 VIZ")]),t._v(" в JSON значении внутри операции будет иметь бинарное представление в hex: "),a("code",[t._v("EA030000000000000356495A")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("public_key")]),t._v(" — значение публичного ключа в бинарном представлении содержит 33 байта, первый байт — значение для восстанавления публичного ключа ("),a("a",{attrs:{href:"https://crypto.stackexchange.com/questions/18105/how-does-recovering-the-public-key-from-an-ecdsa-signature-work",target:"_blank",rel:"noopener noreferrer"}},[t._v("recovery id в ECDSA"),a("OutboundLink")],1),t._v("), 16 байт — координаты точки публичного ключа по оси X, последние 16 байт по оси Y. Например, бинарное значение "),a("code",[t._v("026a1dbaacb805f145f9276025627102152840bb1aa09b7fac580f892d93b572b4")]),t._v(" соответствует приватному ключу с recovery_id равным "),a("code",[t._v("02")]),t._v(" и точке с координатами X в hex представлении "),a("code",[t._v("6a1dbaacb805f145f927602562710215")]),t._v(" и Y в hex представлении "),a("code",[t._v("2840bb1aa09b7fac580f892d93b572b4")]),t._v(". Что соответствует публичному ключу "),a("code",[t._v("VIZ5hDwvV1PPUTmehSmZecaxo1ameBpCMNVmYHKK2bL1ppLGRvh85")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("operation_type")]),t._v(" — тип операции представляет собой целочисленное значение номера операции по протоколу VIZ записанное в 1 байт (продробнее читайте в разделе "),a("RouterLink",{attrs:{to:"/ru/cookbook/operations.html"}},[t._v("Операции и их типы")]),t._v("). Например, операция "),a("code",[t._v("transfer")]),t._v(" в бинарном виде будет иметь запись в hex "),a("code",[t._v("02")]),t._v(", а операция "),a("code",[t._v("create_invite")]),t._v(" hex значение "),a("code",[t._v("2b")]),t._v(".")],1)]),t._v(" "),a("h2",{attrs:{id:"пример-структуры-транзакции"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#пример-структуры-транзакции"}},[t._v("#")]),t._v(" Пример структуры транзакции")]),t._v(" "),a("p",[t._v("Разберем пример транзакции в формате JSON и её представление в бинарном виде:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ref_block_num"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9023")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ref_block_prefix"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1971875185")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"expiration"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-02-07T06:19:23"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"operations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transfer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"from"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"to"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"amount"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.002 VIZ"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"memo"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extensions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("ref_block_num")]),t._v(" — ссылка на номер блока после побитового «и» с hex "),a("code",[t._v("ffff")]),t._v(" (например, число 9023 в hex представлении "),a("code",[t._v("233F")]),t._v(", согласно представлению integer должно быть перевернуто, получаем "),a("code",[t._v("3F23")]),t._v(");")]),t._v(" "),a("li",[a("strong",[t._v("ref_block_prefix")]),t._v(" — 4 байта (5, 6, 7, 8) от бинарного состояния идентификатора блока в десятичном формате, которое можно получить API запросом "),a("code",[t._v("get_block_header")]),t._v(" с номером следующего блока (9024) к плагину database_api. Ответ будет содержать поле "),a("code",[t._v("previous")]),t._v(" с идентификатором "),a("code",[t._v("0000233F716D887523BB63AD3E6107C96EDCFD8A")]),t._v(" искомого блока. Берем "),a("code",[t._v("716D8875")]),t._v(" для бинарного представления, переворачиваем байты — "),a("code",[t._v("75886D71")]),t._v(" и переводим в десятичный формат для JSON: "),a("code",[t._v("1971875185")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("expiration")]),t._v(" — unixtime экспирации транзакции. "),a("code",[t._v("2019-02-07T06:19:23")]),t._v(" в unixtime будет "),a("code",[t._v("1549520363")]),t._v(" (hex значение "),a("code",[t._v("5C5BCDEB")]),t._v("), который в бинарном значении будет перевернут и представлять собой hex: "),a("code",[t._v("EBCD5B5C")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("operations")]),t._v(" — массив операций (так как в массиве один элемент, hex: "),a("code",[t._v("01")]),t._v(");\n"),a("ul",[a("li",[a("strong",[t._v("transfer")]),t._v(" — операция перевода токенов (по нумерации операции в протоколе hex: "),a("code",[t._v("02")]),t._v(");\n"),a("ul",[a("li",[a("strong",[t._v("from")]),t._v(" — логин аккаунта отправителя (длина строки "),a("code",[t._v("test1")]),t._v(" и hex представление: "),a("code",[t._v("057465737431")]),t._v(");")]),t._v(" "),a("li",[a("strong",[t._v("to")]),t._v(" — логин аккаунта получателя (длина строки "),a("code",[t._v("test2")]),t._v(" и hex представление: "),a("code",[t._v("057465737432")]),t._v(");")]),t._v(" "),a("li",[a("strong",[t._v("amount")]),t._v(" — передаваемое количество токенов VIZ ("),a("code",[t._v("1.002 VIZ")]),t._v(" в hex: "),a("code",[t._v("EA030000000000000356495A00000000")]),t._v(");")]),t._v(" "),a("li",[a("strong",[t._v("memo")]),t._v(" — заметка для получателя (длина строки "),a("code",[t._v("<3")]),t._v(" и hex представление: "),a("code",[t._v("023C33")]),t._v(");")])])])])]),t._v(" "),a("li",[a("strong",[t._v("extensions")]),t._v(" — массив служебных расширений транзакции (так как не используется и не имеет элементов, то имеет представление "),a("code",[t._v("00")]),t._v(").")])]),t._v(" "),a("p",[t._v("Итоговое бинарное представление данных транзакции в hex: "),a("code",[t._v("3F23716D8875EBCD5B5C0102057465737431057465737432EA030000000000000356495A00000000023C3300")]),t._v(";")]),t._v(" "),a("p",[t._v("Чтобы отправить транзакцию в блокчейн, необходимо дополнить данное представление "),a("strong",[t._v("chain_id")]),t._v(" в начале и подписать приватным ключом. Полученную подпись необходимо добавить в JSON поле массив "),a("code",[t._v("signatures")]),t._v(", например:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ref_block_num"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9023")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ref_block_prefix"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1971875185")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"expiration"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-02-07T06:19:23"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"operations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transfer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"from"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"to"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"amount"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.002 VIZ"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"memo"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extensions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"signatures"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1f500f2a5d721e45c53e76fca786d690c7c0556f1923aa07c944e26614b50481d353e88f82e731be74c18e3fb8d117dc992a475991974b6e1364a66f5ccb618f83"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("И передать этот JSON через API запрос "),a("code",[t._v("broadcast_transaction")]),t._v(" плагину "),a("code",[t._v("network_broadcast_api")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"идентификатор-транзакции"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#идентификатор-транзакции"}},[t._v("#")]),t._v(" Идентификатор транзакции")]),t._v(" "),a("p",[t._v("В исходном коде ноды указан "),a("a",{attrs:{href:"https://github.com/VIZ-Blockchain/viz-cpp-node/blob/master/libraries/protocol/include/graphene/protocol/transaction.hpp#L122",target:"_blank",rel:"noopener noreferrer"}},[t._v("тип подписанной транзакции как transaction_id_type"),a("OutboundLink")],1),t._v(", который "),a("a",{attrs:{href:"https://github.com/VIZ-Blockchain/viz-cpp-node/blob/master/libraries/protocol/include/graphene/protocol/types.hpp#L103",target:"_blank",rel:"noopener noreferrer"}},[t._v("в протоколе Graphene записан как fc::ripemd160"),a("OutboundLink")],1),t._v(". Но практика показывает, что "),a("a",{attrs:{href:"https://ru.wikipedia.org/wiki/RIPEMD-160",target:"_blank",rel:"noopener noreferrer"}},[t._v("идентификатор транзакции не является ripemd160 (размер хэша 20 байт)"),a("OutboundLink")],1),t._v(", а является "),a("a",{attrs:{href:"https://ru.wikipedia.org/wiki/SHA-2",target:"_blank",rel:"noopener noreferrer"}},[t._v("частью sha256 хэша"),a("OutboundLink")],1),t._v(" (размер хэша 32 байта). Доподлинно неизвестно, почему так произошло, но можно сделать 2 предположения:")]),t._v(" "),a("ul",[a("li",[t._v("Это сделано намеренно, чтобы сократить размерность хэша транзакции (20 байт заместо 32), но увеличивает риск коллизии;")]),t._v(" "),a("li",[t._v("Это непреднамеренный баг, который не нашли до запуска Graphene цепочек, а позже решили не исправлять (предположительно, баг происходит в момент преобразования транзакции через "),a("code",[t._v("digest_type::encoder")]),t._v(" "),a("a",{attrs:{href:"https://github.com/VIZ-Blockchain/viz-cpp-node/blob/master/libraries/protocol/transaction.cpp#L38",target:"_blank",rel:"noopener noreferrer"}},[t._v("в файле протокола "),a("code",[t._v("transaction.cpp")]),a("OutboundLink")],1),t._v(");")])]),t._v(" "),a("p",[t._v("Стоит отметить, что "),a("a",{attrs:{href:"https://github.com/EOSIO/eos/blob/master/libraries/chain/include/eosio/chain/types.hpp#L252",target:"_blank",rel:"noopener noreferrer"}},[t._v("данную ошибку исправили в протоколе EOS, там тип транзакции fc::sha256"),a("OutboundLink")],1),t._v(", что наводит на мысли, что это все таки баг. Как итог идентификатором транзакции в Graphene проектах до EOS является хэш sha256, но обрезанный — 20 первых байт (вместо полных 32 байт).")]),t._v(" "),a("p",[t._v("Например, транзакция в VIZ "),a("a",{attrs:{href:"https://control.viz.world/tools/blocks/11142739/",target:"_blank",rel:"noopener noreferrer"}},[t._v("из блока 11142739"),a("OutboundLink")],1),t._v(" имеет идентификатор "),a("code",[t._v("c84f9e8255859b2083be720cf9b64b3542e4360f")]),t._v(". Сырая транзакция "),a("code",[t._v('{"ref_block_num":1612,"ref_block_prefix":2641357798,"expiration":"2019-10-22T05:59:27","operations":[["award",{"initiator":"on1x","receiver":"viz-social-bot","energy":20,"custom_sequence":0,"memo":"telegram:262632819","beneficiaries":[]}]],"extensions":[]}')]),t._v(" в hex: "),a("code",[t._v("4c06e6eb6f9dbf9aae5d012f046f6e31780e76697a2d736f6369616c2d626f74140000000000000000001274656c656772616d3a3236323633323831390000")]),t._v(".")]),t._v(" "),a("p",[t._v("Хэш sha256 от сырой транзакции: "),a("code",[t._v("c84f9e8255859b2083be720cf9b64b3542e4360f0a62e33363bca5d984ee608a")]),t._v(", первые 20 байт которого и являются её идентификатором в блокчейне: "),a("code",[t._v("c84f9e8255859b2083be720cf9b64b3542e4360f")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"получение-ref-block-num-и-ref-block-prefix-для-формирования-транзакции"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#получение-ref-block-num-и-ref-block-prefix-для-формирования-транзакции"}},[t._v("#")]),t._v(" Получение ref_block_num и ref_block_prefix для формирования транзакции")]),t._v(" "),a("p",[t._v("Нода блокчейна хранит идентификаторы последних 65537 блоков (подробнее читайте "),a("RouterLink",{attrs:{to:"/ru/cookbook/state.html#Уникальность-транзакций-и-tapos-transactions-as-proof-of-stake"}},[t._v("про концепцию TaPoS в VIZ")]),t._v("). Обычно разработчики ссылаются на один из последних блоков, обычно, выполняя очередь действий:")],1),t._v(" "),a("ul",[a("li",[t._v("Получают данные о состоянии системы через API запрос "),a("code",[t._v("get_dynamic_global_properties")]),t._v(" к плагину "),a("code",[t._v("database_api")]),t._v(";")]),t._v(" "),a("li",[t._v("Используя значение поля "),a("code",[t._v("head_block_number")]),t._v(" минус 3 блока устанавливают для какого блока будут формировать ref_block_num и запрашивать его идентификатор;")]),t._v(" "),a("li",[t._v("Получают идентификатор используемого блока, выполняя API запрос "),a("code",[t._v("get_block_header")]),t._v(" к плагину "),a("code",[t._v("database_api")]),t._v(", запрашивая искомый блок плюс один блок (так как заголовок каждого блока содержит ссылку на идентификатор прошлого блока, искомый идентификатор находится в следующем);")]),t._v(" "),a("li",[t._v("Из идентификатора формируют ref_block_prefix.")])]),t._v(" "),a("p",[t._v("Большинство библиотек которые содержат абстракции для упрощения вызовов и трансляции транзакции в блокчейн делают это самостоятельно.")]),t._v(" "),a("p",[t._v("Пример ручного получения "),a("code",[t._v("ref_block_num")]),t._v(" и "),a("code",[t._v("ref_block_prefix")]),t._v(" на viz-js-lib можете посмотреть в исходном коде "),a("a",{attrs:{href:"https://github.com/VIZ-Blockchain/viz-js-lib/blob/master/src/broadcast/index.js#L49",target:"_blank",rel:"noopener noreferrer"}},[t._v("абстракции подготовки транзакции в самой библиотеке"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Пример аналогичного получения "),a("code",[t._v("ref_block_num")]),t._v(" и "),a("code",[t._v("ref_block_prefix")]),t._v(" на PHP в "),a("a",{attrs:{href:"https://github.com/t3ran13/php-graphene-node-client/blob/d3521ad5ae8866771adb0cb5ffd4ccadf6c892dc/Tools/Transaction.php#L64",target:"_blank",rel:"noopener noreferrer"}},[t._v("исходном коде библиотеки php-graphene-node-client"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"порядок-сериализации-данных-в-операции"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#порядок-сериализации-данных-в-операции"}},[t._v("#")]),t._v(" Порядок сериализации данных в операции")]),t._v(" "),a("p",[t._v("Все операции и их параметры записаны в протоколе VIZ и находятся "),a("a",{attrs:{href:"https://github.com/VIZ-Blockchain/viz-cpp-node/blob/master/libraries/protocol/include/graphene/protocol/chain_operations.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("в файле chain_operations.hpp"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Именно там можно изучить типы параметров и их требуемый порядок в операции. "),a("strong",[t._v("Внимание!")]),t._v(" Порядок параматров в структуре операции не совпадает с порядком параметров в самой операции. Рассмотрим пример на операции "),a("code",[t._v("escrow_transfer_operation")]),t._v(", структура операции (часто перед операцией присутствует комментарий её описывающий, ):")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n *  The purpose of this operation is to enable someone to send money contingently to\n *  another individual. The funds leave the *from* account and go into a temporary balance\n *  where they are held until *from* releases it to *to* or *to* refunds it to *from*.\n *\n *  In the event of a dispute the *agent* can divide the funds between the to/from account.\n *  Disputes can be raised any time before or on the dispute deadline time, after the escrow\n *  has been approved by all parties.\n *\n *  This operation only creates a proposed escrow transfer. Both the *agent* and *to* must\n *  agree to the terms of the arrangement by approving the escrow.\n *\n *  The escrow agent is paid the fee on approval of all parties. It is up to the escrow agent\n *  to determine the fee.\n *\n *  Escrow transactions are uniquely identified by 'from' and 'escrow_id', the 'escrow_id' is defined\n *  by the sender.\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("escrow_transfer_operation")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("base_operation")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    account_name_type from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    account_name_type to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    account_name_type agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("uint32_t")]),t._v(" escrow_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    asset token_amount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TOKEN_SYMBOL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    asset fee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    time_point_sec ratification_deadline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    time_point_sec escrow_expiration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    string json_metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_required_active_authorities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flat_set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("account_name_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Порядок параметров в операции задается уже в конце файла методом:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FC_REFLECT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("graphene"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("protocol"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("escrow_transfer_operation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("token_amount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("escrow_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json_metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ratification_deadline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("escrow_expiration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Кроме описания структуры операции есть еще обработка параметров в методе "),a("code",[t._v("validate")]),t._v(", найти который можно "),a("a",{attrs:{href:"https://github.com/VIZ-Blockchain/viz-cpp-node/blob/master/libraries/protocol/chain_operations.cpp#L231",target:"_blank",rel:"noopener noreferrer"}},[t._v("в файле chain_operations.cpp"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" escrow_transfer_operation"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate_account_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate_account_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate_account_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FC_ASSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fee cannot be negative"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FC_ASSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("token_amount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tokens amount cannot be negative"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FC_ASSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" agent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n              to "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"agent must be a third party"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FC_ASSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("symbol "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" TOKEN_SYMBOL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fee must be TOKEN_SYMBOL"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FC_ASSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("token_amount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("symbol "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n              TOKEN_SYMBOL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amount must be TOKEN_SYMBOL"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FC_ASSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ratification_deadline "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("\n              escrow_expiration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ratification deadline must be before escrow expiration"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate_json_metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json_metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Большинство операций проверяют наличие подписи соответствующих полномочий, например в структуре "),a("code",[t._v("escrow_transfer_operation")]),t._v(" присутствует проверка подписи инициатора операции (поле "),a("code",[t._v("from")]),t._v(") активных полномочий в методе "),a("code",[t._v("get_required_active_authorities")]),t._v(".")])])}),[],!1,null,null,null);a.default=n.exports}}]);